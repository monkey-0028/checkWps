
##(void func) login init(); 

- checks wether the already a user logged in or not
- if yes: then change the (global -> temp_user) to the username.
- else: set (global var -> temp_user) to NULL
- (global var -> temp_user) it holds the name of user(defined in def.h)
- max len of temp_user is 60;


##(void func) r_usr();

- reset the (global var -> temp_user).
- use : if username == NULL then call r_usr();

##(void func) login_portal();

- This is like homepage of login
- returns nothing
- give option1 -- login and option2 -- signup
- if <f1> press -- exit from while loop
- up and down button for nevigation
- press <Enter> for selection of option
- after selection it calls respective func.. ie. login and signup

## (void func) login();

- ask for username and pass, then find user.
- finding user is done by "bash script".
- if user found.. write ./usr_data/.login 
- and
- write the (global var ) temp_user to the username;
- 
- if user not found then print error message and write (global val -- temp_user) to NULL;
- then return to the login_portal;
-
- while enteringt pass... use * character




## (macro) setNULL
- This sets the temp_user(a global var (char)) to "NULL";
- You have to call r_usr(a function) manually.

## (macro) warning(string)
- take string as input
- print the string in RED color;
- you have to use move(y,x) function to set the position of the cursor
- using colorpair(1).. it must be defined in main before even calling the function.

## (macro) clearr(len)
- Take (int) as input
- clear the verticle space (swap the filler with <space>) up to the given length;


